//“Make it work, make it right, make it fast.” – Kent Beck
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef double dd;
const int siz = 1e6 + 5;
const int MOD = 1e9 + 7;
#define endl '\n'
#define deb(x) cout << #x << " = " << x << endl;
/*
 credit: 
	https://www.hackerearth.com/blog/developers/how-to-find-the-din-of-a-week
*/
ll check[4]={25, 25, 25, 26};
ll dow(ll yr, ll mo, ll da)  
{  
    static int tmp[] = { 0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4 };  
    yr -= mo < 3;  
    return ( yr + yr / 4 - yr / 100 + yr / 400 + tmp[mo - 1] + da) % 7;  
}  
vector<int> factors(int x){
	vector<int>ans;
	int i = 2;
	ans.push_back(1);
	while(i*i <= x){
		if(x%i == 0){
		ans.push_back(i);
		if(i != x/i)
		ans.push_back(x/i);
		}
		i++;
	}
	return ans;
}
bool isleap(ll yr){
	if((yr % 400 == 0)||(yr % 4 == 0 && yr % 100 != 0))
		return true;
	else
		return false;
}
ll daybata(ll month, ll year) {
	ll days;
    if (month == 4 || month == 6 || month == 9 || month == 11)
		days = 30;
		
	else if (month == 02)
	{
		bool leapyear = (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);

		if (leapyear == 0)
				days = 28;
		else 
				days = 29;
	}

	else 
	days = 31;

	return days;
}
void solve(){  
        //ll m, y, M, Y;
        //cin >> m >> y >> M >> Y;
        //ll strt = ((y/100)+1)*100, end = ((Y/100))*100, clash = 0;
        //ll hund = (((end - strt)/400)*400) + strt, hundred = end;
        //clash += ((end-strt)/400)*101;
        //hund /= 100, hundred /= 100;
		//hund += ((hundred-hund)/4)*4;
		//hund %= 4, hundred %= 4;        
        //partial 
		//vector<ll> current = {2020,2015,2014,2009,2003,1998,1997,1992,1987,1986,1981,1975,1970,1969,1964,1959,1958,1953,1947,1942,1941,1936,1931,1930,1925,1919,1914,1913,1908,1903,1902,1896,1891,1890,1885,1879,1874,1873,1868,1863,1862,1857,1851,1846,1845,1840,1835,1834,1829,1823,1818,1817,1812,1807,1806,1801,1800,1795,1794,1789,1783,1778,1777,1772,1767,1766,1761,1755,1750,1749,1744,1739,1738,1733,1727,1722,1721,1716,1711,1710,1705,1699,1698,1693,1687,1682,1681,1676,1671,1670,1665,1659,1654,1653,1648,1643,1642,1637,1631,1626,1625,1620,1615,1614,1609,1603,1598,1597,1592,1587,1586,1581,1575,1570,1569,1564,1559,1558,1553,1547,1542,1541,1536,1531,1530,1525,1519,1514,1513,1508,1503,1502,1496,1491,1490,1485,1479,1474,1473,1468,1463,1462,1457,1451,1446,1445,1440,1435,1434,1429,1423,1418,1417,1412,1407,1406,1401,1400,1395,1394,1389,1383,1378,1377,1372,1367,1366,1361,1355,1350,1349,1344,1339,1338,1333,1327,1322,1321,1316,1311,1310,1305,1299,1298,1293,1287,1282,1281,1276,1271,1270,1265,1259,1254,1253,1248,1243,1242,1237,1231,1226,1225,1220,1215,1214,1209,1203,1198,1197,1192,1187,1186,1181,1175,1170,1169,1164,1159,1158,1153,1147,1142,1141,1136,1131,1130,1125,1119,1114,1113,1108,1103,1102,1096,1091,1090,1085,1079,1074,1073,1068,1063,1062,1057,1051,1046,1045,1040,1035,1034,1029,1023,1018,1017,1012,1007,1006,1001,1000,995,994,989,983,978,977,972,967,966,961,955,950,949,944,939,938,933,927,922,921,916,911,910,905,899,898,893,887,882,881,876,871,870,865,859,854,853,848,843,842,837,831,826,825,820,815,814,809,803,798,797,792,787,786,781,775,770,769,764,759,758,753,747,742,741,736,731,730,725,719,714,713,708,703,702,696,691,690,685,679,674,673,668,663,662,657,651,646,645,640,635,634,629,623,618,617,612,607,606,601,600,595,594,589,583,578,577,572,567,566,561,555,550,549,544,539,538,533,527,522,521,516,511,510,505,499,498,493,487,482,481,476,471,470,465,459,454,453,448,443,442,437,431,426,425,420,415,414,409,403,398,397,392,387,386,381,375,370,369,364,359,358,353,347,342,341,336,331,330,325,319,314,313,308,303,302,296,291,290,285,279,274,273,268,263,262,257,251,246,245,240,235,234,229,223,218,217,212,207,206,201,200,195,194,189,183,178,177,172,167,166,161,155,150,149,144,139,138,133,127,122,121,116,111,110,105,99,98,93,87,82,81,76,71,70,65,59,54,53,48,43,42,37,31,26,25,20,15,14,9,3};
        
	//bool flag= true;
	
	//ll start,last,monthstart,mend,k;
	//cin>>monthstart>>start;
	//cin>>mend>>last;
	//ll count = 0;
	//for(ll i=start;i<=last;++i){
		//if(flag == true){
			//k = monthstart;
			//flag = false;
		//}
		//else k = 1;
		//for(k; k<=12 ;++k){
			//ll a = dayofweek(i,k,1);
			
			
			//ll temp = daybata(k,i);

			//ll b = dayofweek(i,k,temp);

			//if(a == 0)
				//a = 6;
			//else if(a>5)
				//a = 7 - a + 5 + 1;
			//else if(a < 5)
				//a = 5 - a;
			//ll longend = a + 10;
			
			
			//ll cookstart = temp - b - 7;

			//if(longend >= cookstart){
				//count++;
				 //cout<<i<<" ";
			//}
			
			//if(i == last && k == mend ){
				//cout<<count<<endl;
				//return;
			//}
				
			
			
		//}
	//}
	        vector<int> ans = factors(16);
        for(int i:ans) cout << i << " ";
        
        cout << endl;
}  
int main(){
	#ifndef RAY
		//freopen("input.txt", "r", stdin);
	#endif
		ios::sync_with_stdio(false);
		cin.tie(nullptr);
		int t = 1;
		cin >> t;
		while(t--){
			solve();
		}
	return 0;
}

/*
2
2 2020
2 2020
10 2009
2 2020
* */
